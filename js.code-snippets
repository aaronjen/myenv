{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log('$1');",
		],
		"description": "Log output to console"
	},
	"Prop types": {
		"scope": "javascript,typescript",
		"prefix": "pt",
		"body": [
			"$1.propTypes = {",
			"\t$2",
			"};",
		]
	},
	"Import": {
		"scope": "javascript",
		"prefix": "im",
		"body": [
			"import $2 from \"$1\";"
		]
	},
	"Import PropType": {
		"scope": "javascript",
		"prefix": "imp",
		"body": ["import PropTypes from \"prop-types\";",]
	},
	"Import Styled Components": {
		"scope": "javascript",
		"prefix": "ims",
		"body": "import styled from \"styled-components\";",
	},
	"Export Const Type":{
		"scope": "javascript",
		"prefix": "ect",
		"body": "export const $1 = \"$1\";",
	},
	"Import default": {
		"scope": "javascript",
		"prefix": "imd",
		"body": "import $1 from \"$1\"",
	},
	"static propTypes": {
		"scope": "javascript",
		"prefix": "stp",
		"body": "static propTypes = {$1}",
	},
	"static defaultProps" : {
		"scope": "javascript",
		"prefix": "std",
		"body": "static defaultProps = {$1}"
	}
}
